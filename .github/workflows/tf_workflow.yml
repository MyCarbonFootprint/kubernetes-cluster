# This is a basic workflow to help you get started with Actions

name: Plan and Apply Terraform scripts

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Install dependenties
      shell: bash
      run: |
        # Install Terraform
        wget https://releases.hashicorp.com/terraform/0.13.4/terraform_0.13.4_openbsd_amd64.zip
        unzip terraform_0.13.4_openbsd_amd64.zip
        terraform -v
        # Install Helm
        curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
        sudo apt-get install apt-transport-https --yes
        echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        sudo apt-get update -y
        sudo apt-get install helm -y

    # Runs a single command using the runners shell
    - name: Prepare GCP service account file
      shell: bash
      env:
        GCP_SERVICE_ACCOUNT_FILE: ${{ secrets.GCP_SERVICE_ACCOUNT_FILE }}
      run: |
        echo ${GCP_SERVICE_ACCOUNT_FILE} > service-account.json

    # Runs a single command using the runners shell
    - name: Terraform Init
      shell: bash
      env:
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
        LOGZIO_TOKEN: ${{ secrets.LOGZIO_TOKEN }}
      run: |
        export SCW_ACCESS_KEY=SCW6VHPETC96DKKNPCNZ
        export SCW_SECRET_KEY=${SCW_SECRET_KEY}
        export SCW_DEFAULT_REGION=fr-par
        export SCW_DEFAULT_ZONE=fr-par-1
        export SCW_DEFAULT_ORGANIZATION_ID=${SCW_DEFAULT_ORGANIZATION_ID}
        export GOOGLE_BACKEND_CREDENTIALS=service-account.json
        export TF_VAR_logzio_token=${LOGZIO_TOKEN}
        terraform init

    # Runs a single command using the runners shell
    - name: Terraform plan
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
        LOGZIO_TOKEN: ${{ secrets.LOGZIO_TOKEN }}
      run: |
        export SCW_ACCESS_KEY=SCW6VHPETC96DKKNPCNZ
        export SCW_SECRET_KEY=${SCW_SECRET_KEY}
        export SCW_DEFAULT_REGION=fr-par
        export SCW_DEFAULT_ZONE=fr-par-1
        export SCW_DEFAULT_ORGANIZATION_ID=${SCW_DEFAULT_ORGANIZATION_ID}
        export GOOGLE_BACKEND_CREDENTIALS=service-account.json
        export TF_VAR_registry_password=${GH_TOKEN}
        export TF_VAR_logzio_token=${LOGZIO_TOKEN}
        terraform plan

    # Runs a single command using the runners shell
    - name: Terraform apply
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
        LOGZIO_TOKEN: ${{ secrets.LOGZIO_TOKEN }}
      run: |
        export SCW_ACCESS_KEY=SCW6VHPETC96DKKNPCNZ
        export SCW_SECRET_KEY=${SCW_SECRET_KEY}
        export SCW_DEFAULT_REGION=fr-par
        export SCW_DEFAULT_ZONE=fr-par-1
        export SCW_DEFAULT_ORGANIZATION_ID=${SCW_DEFAULT_ORGANIZATION_ID}
        export GOOGLE_BACKEND_CREDENTIALS=service-account.json
        export TF_VAR_registry_password=${GH_TOKEN}
        export TF_VAR_logzio_token=${LOGZIO_TOKEN}
        terraform apply -auto-approve
